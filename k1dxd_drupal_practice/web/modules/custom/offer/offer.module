<?php

use Drupal\Core\Render\Element;
use Drupal\views\ViewExecutable;
use Drupal\Core\Form\FormStateInterface;

/**
 * Prepares variables for templates.
 * implements hook_preprocess_HOOK()
 */
function template_preprocess_offer(array &$variables) {
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
  $offer = $variables['elements']['#offer'];
  // The full offer object
  $variables['offer'] = $offer;
  // The current price: minimum or highest bid if available
  switch($offer->get('field_offer_type')->getString()) {
    case 'with_minimum':
      $variables['price'] = 'Start bidding at '.
        $offer->get('field_price')->getString() . '$';
      break;
    case 'no_minimum';
      $variables['price'] = 'Start bidding at 0$';
      break;
  }
  // a promo badge (we'll change this later)
  $variables['promo'] = 'Be the first!';
}

/**
 * Provides a theme definition for custom content entity offer
 * {@inheritdoc}
 */
function offer_theme($existing, $type, $theme, $path) {
  return [
    'offer' => [
      'render element' => 'elements',
      'template' => 'offer--teaser',
    ],
    'offer__full' => [
      'base hook' => 'offer',
    ],
    'offer__teaser' => [
      'base hook' => 'offer'
    ]
  ];
}

/**
 * Implements hook_views_pre_render().
 * @param \Drupal\views\ViewExecutable $view
 */
function offer_views_pre_render(ViewExecutable $view) {
  if (isset($view) && ($view->storage->id() == 'offer_over_view')) {
    $view->element['#attached']['library'][] = 'offer/offer_over_view_page';
  }
}

/**
 * Implements hook_form_alter().
 * @param array $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 * @param $form_id\
 */
function offer_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  $forms = ['offer_step1_form', 'offer_step2_form', 'offer_step3_form', 'offer_edit_form'];
  if (in_array($form_id, $forms)) {
    // Prevent revision log box access
    $form['revision_log']['#access'] = FALSE;
  }
}
